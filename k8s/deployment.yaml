# PostgreSQL Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "powtra"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres123"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres  # Prevents permission issues
          # Health check to ensure database is ready
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: postgres-storage
          emptyDir: {}  # For development; use PersistentVolumeClaim for production

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: NodePort  # Exposes postgres externally for development
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30432  # Access via localhost:30432

---
# PowerTracker Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: powtra-backend
  labels:
    app: powtra-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: powtra-backend
  template:
    metadata:
      labels:
        app: powtra-backend
    spec:
      # Wait for postgres to be ready before starting
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z postgres 5432; do
                echo "Waiting for postgres..."
                sleep 2
              done
              echo "PostgreSQL is ready!"
      containers:
        - name: powtra-backend
          image: powtra-backend
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "k8s"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/powtra"
            - name: SPRING_DATASOURCE_USERNAME
              value: "postgres"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "postgres123"
          # Health checks for the Spring Boot application
          readinessProbe:
            httpGet:
              path: /hello
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /hello
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10

---
# PowerTracker Backend Service
apiVersion: v1
kind: Service
metadata:
  name: powtra-backend
spec:
  type: NodePort
  selector:
    app: powtra-backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080